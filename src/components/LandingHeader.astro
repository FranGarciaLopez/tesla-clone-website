---
import Logo from "../components/Logo.astro";
---

<header
	id="landing-header"
	class="py-6 px-10 flex items-center fixed top-0 w-full justify-between text-current z-40"
>
	<div class="flex flex-grow basis-0">
		<Logo />
	</div>

	<nav class="hidden md:block">
		<ul
			class="flex text-sm [&>li>a]:inline-block text-center [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:px-4 py-2"
		>
			<li><a href="#">Model S</a></li>
			<li><a href="#">Model 3</a></li>
			<li><a href="#">Model X</a></li>
			<li><a href="#">Model Y</a></li>
			<li><a href="#">Powerall</a></li>
			<li><a href="#">Carga</a></li>
		</ul>
	</nav>

	<nav class="hidden md:flex flex-grow basis-0 justify-end">
		<ul
			class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:inline-block text-center [&>li>a]:px-4 py-2"
		>
			<li><a href="#">Soporte</a></li>
			<li><a href="#">Tienda</a></li>
			<li><a href="#">Cuenta</a></li>
			<li><a href="#">Men√∫</a></li>
		</ul>
	</nav>

	<!-- Mobile Menu Button -->
	<button
		data-collapse-toggle="mobile-menu-3"
		type="button"
		class="md:hidden text-gray-400 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-300 rounded-lg inline-flex items-center justify-center"
		aria-controls="mobile-menu-3"
		aria-expanded="false"
		onclick="toggleMobileMenu()"
	>
		<span class="sr-only">Open main menu</span>
		<svg
			class="w-6 h-6"
			fill="currentColor"
			viewBox="0 0 20 20"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path
				fill-rule="evenodd"
				d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
				clip-rule="evenodd"></path>
		</svg>
		<svg
			class="hidden w-6 h-6 md:inline-block"
			fill="currentColor"
			viewBox="0 0 20 20"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path
				fill-rule="evenodd"
				d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
				clip-rule="evenodd"></path>
		</svg>
	</button>

	<!-- Mobile Menu -->
	<div
		class="hidden md:hidden absolute top-0 left-0 w-full h-full bg-white z-50"
		id="mobile-menu-3"
	>
		<div class="flex flex-col items-center justify-center h-full">
			<a
				href="#"
				class="text-gray-700 hover:bg-gray-50 px-4 py-2"
				>Home</a
			>
			<a
				href="#"
				class="text-gray-700 hover:bg-gray-50 px-4 py-2"
				>About</a
			>
			<a
				href="#"
				class="text-gray-700 hover:bg-gray-50 px-4 py-2"
				>Services</a
			>
			<!-- Add more menu items as needed -->
		</div>
	</div>

	<!-- Menu Backdrop -->
	<div
		id="menu-backdrop"
		class="absolute bg-black/20 backdrop-blur-lg rounded translate-x-[var(--left)] translate-y-[var(--top)] top-0 left-0 w-[var(--width)] h-[var(--height)] transition-all duration-300 ease-in-out opacity-0 -z-10"
	>
	</div>
</header>

<script>
	const mobileMenuButton = document.querySelector(
		"[data-collapse-toggle='mobile-menu-3']",
	);
	const mobileMenu = document.getElementById("mobile-menu-3");

	function toggleMobileMenu() {
		const isExpanded =
			mobileMenuButton.getAttribute("aria-expanded") === "true";

		mobileMenuButton.setAttribute(
			"aria-expanded",
			String(!isExpanded),
		);
		mobileMenu.style.display = isExpanded ? "none" : "flex";
	}

	mobileMenuButton.addEventListener("click", toggleMobileMenu);
</script>

<script>
	const listItem = document.querySelectorAll("#landing-header li");
	const menuBackdrop = document.querySelector(
		"#menu-backdrop",
	) as HTMLElement;

	listItem.forEach((item) => {
		item.addEventListener("mouseenter", () => {
			const { left, top, width, height } =
				item.getBoundingClientRect();

			menuBackdrop.style.setProperty("--left", `${left}px`);
			menuBackdrop.style.setProperty("--top", `${top}px`);
			menuBackdrop.style.setProperty("--width", `${width}px`);
			menuBackdrop.style.setProperty("--height", `${height}px`);
			menuBackdrop.style.opacity = "1";
			menuBackdrop.style.visibility = "visible";
		});

		item.addEventListener("mouseleave", () => {
			menuBackdrop.style.opacity = "0";
			menuBackdrop.style.visibility = "hidden";
		});
	});
</script>

<script>
	const $header = document.querySelector("#landing-header") as HTMLElement;

	const observerOptions = {
		root: null,
		rootMargin: "0px",
		threshold: 0.9,
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			const { isIntersecting } = entry;

			if (isIntersecting) {
				const color =
					entry.target.getAttribute(
						"data-header-color",
					);

				$header.style.color = color;
			}
		});
	}, observerOptions);

	const $sections = document.querySelectorAll(".landing-section");
	$sections.forEach((section) => observer.observe(section));
</script>
